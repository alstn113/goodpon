openapi: 3.0.1
info:
  title: Goodpon Dashboard API
  description: Goodpon Dashboard API Documentation
  version: 1.0.0
servers:
- url: http://localhost:8080
tags: []
paths:
  /v1/accounts:
    get:
      tags:
      - Account
      summary: 내 계정 정보 조회
      description: 내 계정 조회 API
      operationId: 내 계정 정보 조회 - 성공
      parameters:
      - name: Authorization
        in: header
        description: "인증 토큰 (Bearer {access-token})"
        required: true
        schema:
          type: string
        example: "Bearer {access-token}"
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse<AccountInfo>'
              examples:
                내 계정 정보 조회 - 성공:
                  value: "{\n  \"result\" : \"SUCCESS\",\n  \"data\" : {\n    \"id\"\
                    \ : 1,\n    \"email\" : \"test@goodpon.site\",\n    \"name\" :\
                    \ \"테스트 사용자\",\n    \"verified\" : true\n  },\n  \"error\" : null\n\
                    }"
  /v1/merchants:
    get:
      tags:
      - Merchant
      summary: 내 상점 목록 조회
      description: 내 상점 목록 조회 API
      operationId: 내 상점 목록 조회 - 성공
      parameters:
      - name: Authorization
        in: header
        description: "인증 토큰 (Bearer {access-token})"
        required: true
        schema:
          type: string
        example: "Bearer {access-token}"
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse<List<MyMerchantSummary>>'
              examples:
                내 상점 목록 조회 - 성공:
                  value: "{\n  \"result\" : \"SUCCESS\",\n  \"data\" : [ {\n    \"\
                    id\" : 2,\n    \"name\" : \"두번째 상점\",\n    \"createdAt\" : \"\
                    2025-07-13T11:06:10.376217\"\n  }, {\n    \"id\" : 1,\n    \"\
                    name\" : \"첫번째 상점\",\n    \"createdAt\" : \"2025-07-12T11:06:10.376223\"\
                    \n  } ],\n  \"error\" : null\n}"
    post:
      tags:
      - Merchant
      summary: 상점 생성
      description: 상점 생성 API
      operationId: 상점 생성 - 성공
      parameters:
      - name: Authorization
        in: header
        description: "인증 토큰 (Bearer {access-token})"
        required: true
        schema:
          type: string
        example: "Bearer {access-token}"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMerchantRequest'
            examples:
              상점 생성 - 성공:
                value: "{\n  \"name\" : \"상점\"\n}"
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse<CreateMerchantResult>'
              examples:
                상점 생성 - 성공:
                  value: "{\n  \"result\" : \"SUCCESS\",\n  \"data\" : {\n    \"id\"\
                    \ : 1,\n    \"name\" : \"상점\",\n    \"clientId\" : \"ck_dd144f3b95144877a0dcbaad2b321380\"\
                    ,\n    \"clientSecrets\" : [ {\n      \"id\" : 1,\n      \"secret\"\
                    \ : \"sk_8f3b95144877a0dcbaad2b321380\",\n      \"expiredAt\"\
                    \ : null\n    } ],\n    \"merchantAccounts\" : [ {\n      \"id\"\
                    \ : 1,\n      \"accountId\" : 1,\n      \"role\" : \"OWNER\"\n\
                    \    } ]\n  },\n  \"error\" : null\n}"
  /v1/accounts/sign-up:
    post:
      tags:
      - Account
      summary: 회원 가입
      description: 회원 가입 API
      operationId: '회원가입 - '
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
            examples:
              회원가입 - 실패 - 이미 사용 중인 이메일:
                value: "{\n  \"email\" : \"existsEmail@goodpon.site\",\n  \"password\"\
                  \ : \"password123\",\n  \"name\" : \"테스트 사용자\"\n}"
              회원가입 - 성공:
                value: "{\n  \"email\" : \"test@goodpon.site\",\n  \"password\" :\
                  \ \"password123\",\n  \"name\" : \"테스트 사용자\"\n}"
              회원가입 - 실패 - 잘못된 입력값:
                value: "{\n  \"email\" : \"invalid-email-format\",\n  \"password\"\
                  \ : \"password123\",\n  \"name\" : \"테스트 사용자\"\n}"
      responses:
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-merchants-merchantId1265661162'
              examples:
                회원가입 - 실패 - 이미 사용 중인 이메일:
                  value: "{\n  \"result\" : \"ERROR\",\n  \"data\" : null,\n  \"error\"\
                    \ : {\n    \"code\" : \"ACCOUNT_EMAIL_ALREADY_EXISTS\",\n    \"\
                    message\" : \"이미 사용 중인 이메일입니다.\",\n    \"data\" : null\n  }\n}"
                회원가입 - 실패 - 잘못된 입력값:
                  value: "{\n  \"result\" : \"ERROR\",\n  \"data\" : null,\n  \"error\"\
                    \ : {\n    \"code\" : \"ACCOUNT_SIGN_UP_INVALID_INPUT\",\n   \
                    \ \"message\" : \"계정 생성에 필요한 입력값이 올바르지 않습니다.\",\n    \"data\"\
                    \ : null\n  }\n}"
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse<SignUpResult>'
              examples:
                회원가입 - 성공:
                  value: "{\n  \"result\" : \"SUCCESS\",\n  \"data\" : {\n    \"id\"\
                    \ : 1,\n    \"email\" : \"test@goodpon.site\",\n    \"name\" :\
                    \ \"테스트 사용자\",\n    \"verified\" : false\n  },\n  \"error\" :\
                    \ null\n}"
  /v1/auth/login:
    post:
      tags:
      - Auth
      summary: 로그인
      description: 로그인 API
      operationId: '로그인 - '
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
            examples:
              로그인 - 실패 - 비밀번호 불일치:
                value: "{\n  \"email\" : \"test@goodpon.site\",\n  \"password\" :\
                  \ \"wrong password\"\n}"
              로그인 - 실패 - 존재하지 않는 계정:
                value: "{\n  \"email\" : \"noExists@goodpon.site\",\n  \"password\"\
                  \ : \"password123\"\n}"
              로그인 - 성공:
                value: "{\n  \"email\" : \"test@goodpon.site\",\n  \"password\" :\
                  \ \"password123\"\n}"
      responses:
        "401":
          description: "401"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-merchants-merchantId1265661162'
              examples:
                로그인 - 실패 - 비밀번호 불일치:
                  value: "{\n  \"result\" : \"ERROR\",\n  \"data\" : null,\n  \"error\"\
                    \ : {\n    \"code\" : \"PASSWORD_MISMATCH\",\n    \"message\"\
                    \ : \"비밀번호가 일치하지 않습니다.\",\n    \"data\" : null\n  }\n}"
        "404":
          description: "404"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-merchants-merchantId1265661162'
              examples:
                로그인 - 실패 - 존재하지 않는 계정:
                  value: "{\n  \"result\" : \"ERROR\",\n  \"data\" : null,\n  \"error\"\
                    \ : {\n    \"code\" : \"ACCOUNT_NOT_FOUND\",\n    \"message\"\
                    \ : \"존재하지 않는 계정입니다.\",\n    \"data\" : null\n  }\n}"
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse<LoginResult>'
              examples:
                로그인 - 성공:
                  value: "{\n  \"result\" : \"SUCCESS\",\n  \"data\" : {\n    \"id\"\
                    \ : 1,\n    \"email\" : \"test@goodpon.site\",\n    \"name\" :\
                    \ \"테스트 사용자\",\n    \"verified\" : true,\n    \"accessToken\"\
                    \ : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMn0.KMUFsIDTnFmyG3nMiGM6H9FNFUROf3wh7SmqJp-QV30\"\
                    \n  },\n  \"error\" : null\n}"
  /v1/auth/verify:
    post:
      tags:
      - Auth
      summary: 이메일 인증
      description: 이메일 인증 API
      operationId: '이메일 인증 - '
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
            examples:
              이메일 인증 - 성공:
                value: "{\n  \"token\" : \"email-verification-token\"\n}"
              이메일 인증 - 실패 - 존재하지 않는 계정:
                value: "{\n  \"token\" : \"invalid-email-verification-token\"\n}"
              이메일 인증 - 실패 - 이미 인증된 계정:
                value: "{\n  \"token\" : \"invalid-email-verification-token\"\n}"
              이메일 인증 - 실패 - 유효하지 않는 이메일 인증 토큰:
                value: "{\n  \"token\" : \"invalid-email-verification-token\"\n}"
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-auth-verify1745294369'
              examples:
                이메일 인증 - 성공:
                  value: "{\n  \"result\" : \"SUCCESS\",\n  \"data\" : \"이메일 인증이 완\
                    료되었습니다.\",\n  \"error\" : null\n}"
        "404":
          description: "404"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-merchants-merchantId1265661162'
              examples:
                이메일 인증 - 실패 - 존재하지 않는 계정:
                  value: "{\n  \"result\" : \"ERROR\",\n  \"data\" : null,\n  \"error\"\
                    \ : {\n    \"code\" : \"ACCOUNT_NOT_FOUND\",\n    \"message\"\
                    \ : \"존재하지 않는 계정입니다.\",\n    \"data\" : null\n  }\n}"
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-merchants-merchantId1265661162'
              examples:
                이메일 인증 - 실패 - 이미 인증된 계정:
                  value: "{\n  \"result\" : \"ERROR\",\n  \"data\" : null,\n  \"error\"\
                    \ : {\n    \"code\" : \"ACCOUNT_ALREADY_VERIFIED\",\n    \"message\"\
                    \ : \"이미 인증된 계정입니다.\",\n    \"data\" : null\n  }\n}"
                이메일 인증 - 실패 - 유효하지 않는 이메일 인증 토큰:
                  value: "{\n  \"result\" : \"ERROR\",\n  \"data\" : null,\n  \"error\"\
                    \ : {\n    \"code\" : \"INVALID_EMAIL_VERIFICATION_TOKEN\",\n\
                    \    \"message\" : \"유효하지 않은 이메일 인증 토큰입니다.\",\n    \"data\" :\
                    \ null\n  }\n}"
  /v1/merchants/{merchantId}:
    get:
      tags:
      - Merchant
      summary: 상점 상세 조회
      description: 상점 상세 정보 조회 API
      operationId: '상점 상세 조회 - '
      parameters:
      - name: merchantId
        in: path
        description: 조회할 상점 ID
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: "인증 토큰 (Bearer {access-token})"
        required: true
        schema:
          type: string
        example: "Bearer {access-token}"
      responses:
        "404":
          description: "404"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-merchants-merchantId1265661162'
              examples:
                상점 상세 조회 - 실패 - 존재하지 않는 상점:
                  value: "{\n  \"result\" : \"ERROR\",\n  \"data\" : null,\n  \"error\"\
                    \ : {\n    \"code\" : \"MERCHANT_NOT_FOUND\",\n    \"message\"\
                    \ : \"존재하지 않는 상점입니다.\",\n    \"data\" : null\n  }\n}"
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse<MyMerchantDetail>'
              examples:
                상점 상세 조회 - 성공:
                  value: "{\n  \"result\" : \"SUCCESS\",\n  \"data\" : {\n    \"id\"\
                    \ : 1,\n    \"name\" : \"테스트 상점\",\n    \"clientId\" : \"ck_dd144f3b95144877a0dcbaad2b321380\"\
                    ,\n    \"merchantAccounts\" : [ {\n      \"merchantAccountId\"\
                    \ : 1,\n      \"accountId\" : 1,\n      \"email\" : \"test@goodpon.site\"\
                    ,\n      \"name\" : \"테스트 사용자\",\n      \"role\" : \"OWNER\",\n\
                    \      \"createdAt\" : \"2025-07-13T11:06:10.488204\"\n    } ],\n\
                    \    \"clientSecrets\" : [ {\n      \"merchantClientSecretId\"\
                    \ : 1,\n      \"secret\" : \"sk_8f3b95144877a0dcbaad2b321380\"\
                    ,\n      \"createdAt\" : \"2025-07-13T11:06:10.488212\",\n   \
                    \   \"expiredAt\" : null\n    } ],\n    \"createdAt\" : \"2025-07-13T11:06:10.488214\"\
                    ,\n    \"updatedAt\" : \"2025-07-13T11:06:10.488214\"\n  },\n\
                    \  \"error\" : null\n}"
  /v1/auth/verify/resend:
    post:
      tags:
      - Auth
      summary: 인증 이메일 재전송
      description: 인증 이메일 재전송 API
      operationId: '인증 이메일 재전송 - '
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendVerificationEmailRequest'
            examples:
              인증 이메일 재전송 - 성공:
                value: "{\n  \"email\" : \"test@goodpon.site\"\n}"
              인증 이메일 재전송 - 실패 - 존재하지 않는 이메일:
                value: "{\n  \"email\" : \"test@goodpon.site\"\n}"
              인증 이메일 재전송 - 실패 - 이미 인증된 이메일:
                value: "{\n  \"email\" : \"test@goodpon.site\"\n}"
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-auth-verify-resend-1266018272'
              examples:
                인증 이메일 재전송 - 성공:
                  value: "{\n  \"result\" : \"SUCCESS\",\n  \"data\" : \"인증 이메일이 재\
                    전송되었습니다.\",\n  \"error\" : null\n}"
        "404":
          description: "404"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-merchants-merchantId1265661162'
              examples:
                인증 이메일 재전송 - 실패 - 존재하지 않는 이메일:
                  value: "{\n  \"result\" : \"ERROR\",\n  \"data\" : null,\n  \"error\"\
                    \ : {\n    \"code\" : \"ACCOUNT_NOT_FOUND\",\n    \"message\"\
                    \ : \"존재하지 않는 계정입니다.\",\n    \"data\" : null\n  }\n}"
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-merchants-merchantId1265661162'
              examples:
                인증 이메일 재전송 - 실패 - 이미 인증된 이메일:
                  value: "{\n  \"result\" : \"ERROR\",\n  \"data\" : null,\n  \"error\"\
                    \ : {\n    \"code\" : \"ACCOUNT_ALREADY_VERIFIED\",\n    \"message\"\
                    \ : \"이미 인증된 계정입니다.\",\n    \"data\" : null\n  }\n}"
components:
  schemas:
    LoginRequest:
      title: LoginRequest
      required:
      - email
      - password
      type: object
      properties:
        password:
          type: string
          description: 계정 비밀번호
        email:
          type: string
          description: 계정 이메일
    ApiResponse<LoginResult>:
      title: ApiResponse<LoginResult>
      required:
      - data
      - error
      - result
      type: object
      properties:
        result:
          type: string
          description: 요청 결과 (SUCCESS/ERROR)
        data:
          required:
          - accessToken
          - email
          - id
          - name
          - verified
          type: object
          properties:
            verified:
              type: boolean
              description: 이메일 인증 여부
            name:
              type: string
              description: 사용자 이름
            id:
              type: number
              description: 사용자 ID
            accessToken:
              type: string
              description: 액세스 토큰
            email:
              type: string
              description: 사용자 이메일
          description: 회원가입 결과 데이터
    ApiResponse<MyMerchantDetail>:
      title: ApiResponse<MyMerchantDetail>
      required:
      - data
      - error
      - result
      type: object
      properties:
        result:
          type: string
          description: 요청 결과 (SUCCESS/ERROR)
        data:
          required:
          - clientId
          - clientSecrets
          - createdAt
          - id
          - merchantAccounts
          - name
          - updatedAt
          type: object
          properties:
            createdAt:
              type: string
              description: 상점 생성 시간
            clientSecrets:
              type: array
              description: 상점 클라이언트 시크릿 목록
              items:
                required:
                - createdAt
                - merchantClientSecretId
                - secret
                type: object
                properties:
                  createdAt:
                    type: string
                    description: 상점 클라이언트 시크릿 생성 시간
                  secret:
                    type: string
                    description: 상점 클라이언트 시크릿 값
                  merchantClientSecretId:
                    type: number
                    description: 상점 클라이언트 시크릿 ID
            clientId:
              type: string
              description: 상점 클라이언트 ID
            name:
              type: string
              description: 상점 이름
            merchantAccounts:
              type: array
              description: 상점 계정 목록
              items:
                required:
                - accountId
                - createdAt
                - email
                - merchantAccountId
                - name
                - role
                type: object
                properties:
                  createdAt:
                    type: string
                    description: 상점 계정 생성 시간
                  accountId:
                    type: number
                    description: 상점 계정의 사용자 ID
                  role:
                    type: string
                    description: "상점 계정의 역할 (OWNER, STAFF)"
                  name:
                    type: string
                    description: 상점 계정의 사용자 이름
                  merchantAccountId:
                    type: number
                    description: 상점 계정 ID
                  email:
                    type: string
                    description: 상점 계정의 사용자 이메일
            id:
              type: number
              description: 상점 ID
            updatedAt:
              type: string
              description: 상점 정보 수정 시간
          description: 상점 상세 정보 데이터
    v1-auth-verify1745294369:
      required:
      - data
      - error
      - result
      type: object
      properties:
        result:
          type: string
          description: 요청 결과 (SUCCESS/ERROR)
        data:
          type: string
          description: 이메일 인증 완료 메시지
    CreateMerchantRequest:
      title: CreateMerchantRequest
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: 상점 이름
    v1-auth-verify-resend-1266018272:
      required:
      - data
      - error
      - result
      type: object
      properties:
        result:
          type: string
          description: 요청 결과 (SUCCESS/ERROR)
        data:
          type: string
          description: 인증 이메일 재전송 완료 메시지
    ApiResponse<CreateMerchantResult>:
      title: ApiResponse<CreateMerchantResult>
      required:
      - data
      - error
      - result
      type: object
      properties:
        result:
          type: string
          description: 요청 결과 (SUCCESS/ERROR)
        data:
          required:
          - clientId
          - clientSecrets
          - id
          - merchantAccounts
          - name
          type: object
          properties:
            clientSecrets:
              type: array
              description: 상점 클라이언트 시크릿 목록
              items:
                required:
                - id
                - secret
                type: object
                properties:
                  secret:
                    type: string
                    description: 클라이언트 시크릿 값
                  id:
                    type: number
                    description: 클라이언트 시크릿 ID
            clientId:
              type: string
              description: 상점 클라이언트 ID
            name:
              type: string
              description: 상점 이름
            merchantAccounts:
              type: array
              description: 상점 계정 목록
              items:
                required:
                - accountId
                - id
                - role
                type: object
                properties:
                  accountId:
                    type: number
                    description: 상점 계정의 사용자 ID
                  role:
                    type: string
                    description: "상점 계정의 역할 (OWNER, STAFF)"
                  id:
                    type: number
                    description: 상점 계정 ID
            id:
              type: number
              description: 상점 ID
          description: 상점 생성 결과 데이터
    ApiResponse<AccountInfo>:
      title: ApiResponse<AccountInfo>
      required:
      - data
      - error
      - result
      type: object
      properties:
        result:
          type: string
          description: 요청 결과
        data:
          required:
          - email
          - id
          - name
          - verified
          type: object
          properties:
            verified:
              type: boolean
              description: 이메일 인증 여부
            name:
              type: string
              description: 사용자 이름
            id:
              type: number
              description: 사용자 ID
            email:
              type: string
              description: 사용자 이메일
          description: 계정 정보 데이터
    ApiResponse<SignUpResult>:
      title: ApiResponse<SignUpResult>
      required:
      - data
      - error
      - result
      type: object
      properties:
        result:
          type: string
          description: 요청 결과 (SUCCESS/ERROR)
        data:
          required:
          - email
          - id
          - name
          - verified
          type: object
          properties:
            verified:
              type: boolean
              description: 이메일 인증 여부
            name:
              type: string
              description: 사용자 이름
            id:
              type: number
              description: 사용자 ID
            email:
              type: string
              description: 사용자 이메일
          description: 회원가입 결과 데이터
    v1-merchants-merchantId1265661162:
      required:
      - data
      - error
      - result
      type: object
      properties:
        result:
          type: string
          description: 요청 결과 (SUCCESS/ERROR)
        error:
          required:
          - code
          - data
          - message
          type: object
          properties:
            code:
              type: string
              description: 오류 코드
            message:
              type: string
              description: 오류 메시지
          description: 오류 정보
    VerifyEmailRequest:
      title: VerifyEmailRequest
      required:
      - token
      type: object
      properties:
        token:
          type: string
          description: 이메일 인증 토큰
    ApiResponse<List<MyMerchantSummary>>:
      title: ApiResponse<List<MyMerchantSummary>>
      required:
      - data
      - error
      - result
      type: object
      properties:
        result:
          type: string
          description: 요청 결과 (SUCCESS/ERROR)
        data:
          type: array
          description: 상점 목록 데이터
          items:
            required:
            - createdAt
            - id
            - name
            type: object
            properties:
              createdAt:
                type: string
                description: 상점 생성 시간
              name:
                type: string
                description: 상점 이름
              id:
                type: number
                description: 상점 ID
    ResendVerificationEmailRequest:
      title: ResendVerificationEmailRequest
      required:
      - email
      type: object
      properties:
        email:
          type: string
          description: 인증 이메일을 재전송할 계정의 이메일
    SignUpRequest:
      title: SignUpRequest
      required:
      - email
      - name
      - password
      type: object
      properties:
        password:
          type: string
          description: 사용자 비밀번호
        name:
          type: string
          description: 사용자 이름
        email:
          type: string
          description: 사용자 이메일
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Authorization 헤더에 'Bearer {access-token}' 형식으로 전달되는 액세스 토큰"

security:
  - bearerAuth: []
